# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Project {
  id: Int!

  """Project title"""
  title: String!

  """Description of this project"""
  description: String!

  """Is this project active?"""
  active: Boolean!

  """Number of entries for this project"""
  entryCount: Int
  entries: [Entry!]!
  accounts: [Account!]!
}

type ProjectSummary {
  """Project ID"""
  projectId: Int!

  """Project title"""
  title: String!

  """Number of time entries"""
  entryCount: Int!

  """Total duration (minutes)"""
  totalMinutes: Int!
}

type Entry {
  id: Int!
  created: DateTime!
  updated: DateTime!
  start: String!
  stop: String!
  description: String!
  account: Account!
  project: Project!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Role {
  id: Int!

  """Role name"""
  name: String!

  """Description of this role"""
  description: String!
  accounts: [Account!]!
}

type Account {
  id: Int!
  email: String!
  firstName: String!
  lastName: String!
}

type AccountSummary {
  """Account ID"""
  accountId: Int!

  """First name"""
  firstName: String!

  """Last name"""
  lastName: String!

  """Number of time entries"""
  entryCount: Int!

  """Total duration (minutes)"""
  totalMinutes: Int!
}

type JWTClaims {
  id: Float!
  firstName: String!
  lastName: String!
  email: String!
  roles: [Role!]!
}

type LoginResponse {
  token: String!
  claims: JWTClaims!
}

type Query {
  readAccounts: [Account!]!
  readAccountSummaries: [AccountSummary!]!
  readRoles: [Role!]!
  readEntries: [Entry!]!
  readEntriesByAccount(accountId: Int): [Entry!]!
  readEntriesByProject(projectId: Int): [Entry!]!
  readProjects: [Project!]!
  readProjectSummaries: [ProjectSummary!]!
}

type Mutation {
  createAccount(createInput: AccountCreateInput!): Account!
  updateAccount(updateInput: AccountUpdateInput!): Account!
  deleteAccount(id: Int!): Int!
  createRole(createInput: RoleCreateInput!): Role!
  updateRole(updateInput: RoleUpdateInput!): Role!
  deleteRole(id: Int!): Int!
  login(loginCredentials: LoginCredentials!): LoginResponse!
  changePassword(passwordInput: ChangePasswordInput!): String!
  createEntry(createInput: EntryCreateInput!): Entry!
  updateEntry(updateInput: EntryUpdateInput!): Entry!
  deleteEntry(id: Int!): Int!
  createProject(createInput: ProjectCreateInput!): Project!
  updateProject(updateInput: ProjectUpdateInput!): Project!
  deleteProject(id: Int!): Int!
}

input AccountCreateInput {
  """Email address"""
  email: String!

  """Password"""
  password: String!

  """First name"""
  firstName: String!

  """Last name"""
  lastName: String!
}

input AccountUpdateInput {
  id: Int!

  """Email address"""
  email: String

  """Password"""
  password: String

  """First name"""
  firstName: String

  """Last name"""
  lastName: String
}

input RoleCreateInput {
  """Role name"""
  name: String!

  """Description of this role"""
  description: String!
}

input RoleUpdateInput {
  id: Int!

  """Role name"""
  name: String

  """Description of this role"""
  description: String
}

input LoginCredentials {
  email: String!
  password: String!
}

input ChangePasswordInput {
  accountId: Int!
  currentPassword: String!
  newPassword: String!
}

input EntryCreateInput {
  accountId: Int!
  projectId: Int!
  start: String!
  stop: String!
  description: String!
}

input EntryUpdateInput {
  id: Int!
  projectId: Float
  start: String
  stop: String
  description: String
}

input ProjectCreateInput {
  """Project title"""
  title: String!

  """Description of this project"""
  description: String!

  """Is this project active?"""
  active: Boolean!
}

input ProjectUpdateInput {
  id: Int!

  """Project title"""
  title: String

  """Description of this project"""
  description: String

  """Is this project active?"""
  active: Boolean
}
