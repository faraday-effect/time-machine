# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Account {
  id: Int!
  email: String!
  password: String!
  firstName: String!
  lastName: String!
}

input AccountCreateInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Entry {
  id: Int!
  created: DateTime!
  updated: DateTime!
  start: String!
  stop: String!
  description: String!
}

input EntryCreateInput {
  start: String!
  stop: String!
  description: String!
}

input EntryUpdateInput {
  id: Int!
  start: String
  stop: String
  description: String
}

type Mutation {
  createAccount(createInput: AccountCreateInput!): Account!
  createEntry(createInput: EntryCreateInput!): Entry!
  updateEntry(updateInput: EntryUpdateInput!): Entry!
  deleteEntry(id: Int!): Int!
  createProject(createInput: ProjectCreateInput!): Project!
  updateProject(updateInput: ProjectUpdateInput!): Project!
  deleteProject(id: Int!): Int!
}

type Project {
  id: Int!

  """Project title"""
  title: String!

  """Description of this project"""
  description: String!

  """Is this project active?"""
  active: Boolean
}

input ProjectCreateInput {
  """Project title"""
  title: String!

  """Description of this project"""
  description: String!

  """Is this project active?"""
  active: Boolean = true
}

input ProjectUpdateInput {
  id: Int!

  """Project title"""
  title: String

  """Description of this project"""
  description: String

  """Is this project active?"""
  active: Boolean
}

type Query {
  readAccounts: [Account!]!
  readEntries: [Entry!]!
  readProjects: [Project!]!
}
