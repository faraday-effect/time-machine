import { Args, Mutation, Query, Resolver } from "@nestjs/graphql";
import { Int } from "type-graphql";

import { {{ entityName }}Service } from "./{{ lower entityName }}.service";
import { {{ entityName }}, {{ entityName }}CreateInput } from "./entities";

@Resolver("{{ entityName }}")
  export class {{ entityName }}Resolver {
  constructor(private readonly {{ lower entityName }}Service: {{ entityName }}Service) {}

  @Mutation(() => {{ entityName }})
    create{{ entityName }}(@Args("createInput") createInput: {{ entityName }}CreateInput) {
    return this.{{ lower entityName }}Service.create{{ entityName }}(createInput);
  }

  @Query(() => [{{ entityName }}])
    read{{ entityNamePlural }}() {
    return this.{{ lower entityName }}Service.read{{ entityNamePlural }}();
  }

  @Mutation(() => {{ entityName }})
    update{{ entityName }}(@Args("updateInput") updateInput: {{ entityName }}UpdateInput) {
    return this.{{ lower entityName }}Service.update{{ entityName }}(updateInput);
  }

  @Mutation(() => Int)
    delete{{ entityName }}(@Args({ name: "id", type: () => Int }) id: number) {
    return this.{{ lower entityName }}Service.delete{{ entityName }}(id);
  }
}
